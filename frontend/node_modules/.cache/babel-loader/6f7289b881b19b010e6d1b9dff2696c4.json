{"ast":null,"code":"import Axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_FAIL, MY_ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL, ORDER_DELETE_SUCCESS } from \"../constants/orderConstants\";\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/mine\", {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders\", {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n      payload: paymentResult\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n      payload: orde\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.delete(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder };","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/e-commerce/frontend/src/actions/orderActions.js"],"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_PAY_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","MY_ORDER_LIST_REQUEST","MY_ORDER_LIST_FAIL","MY_ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_DELETE_REQUEST","ORDER_DELETE_FAIL","ORDER_DELETE_SUCCESS","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","token","error","message","detailsOrder","orderId","get","listMyOrders","listOrders","payOrder","paymentResult","put","_id","deleteOrder","orde","delete"],"mappings":"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","sourcesContent":["import Axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, MY_ORDER_LIST_REQUEST, MY_ORDER_LIST_FAIL, MY_ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_DELETE_REQUEST, ORDER_DELETE_FAIL, ORDER_DELETE_SUCCESS  } from \"../constants/orderConstants\";\n\nconst createOrder = (order) =>  async(dispatch, getState) => {\n    try {\n        dispatch({type: ORDER_CREATE_REQUEST, payload: order});\n    const {userSignin:{userInfo}} = getState();\n    const {data: {data: newOrder}} =  await Axios.post(\"/api/orders\", order, {\n        headers: {\n            Authorization: 'Bearer' + userInfo.token\n        }\n    })\n    dispatch({type: ORDER_CREATE_SUCCESS, payload: newOrder})\n    } catch(error) {\n        dispatch({type: ORDER_CREATE_FAIL, payload: error.message})\n    }\n}\n\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({ type:  ORDER_DETAILS_REQUEST, payload: orderId });\n        const {userSignin:{userInfo}} = getState();\n        const { data } = await Axios.get(\"/api/orders/\" + orderId, {\n            headers:\n            {Authorization: 'Bearer' + userInfo.token}\n        });\n        dispatch({type: ORDER_DETAILS_SUCCESS, payload: data})\n    } catch(error) {\n        dispatch({type: ORDER_DETAILS_FAIL, payload: error.message})\n    }\n}\n\nconst listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type:  MY_ORDER_LIST_REQUEST});\n        const {userSignin:{userInfo}} = getState();\n        const { data } = await Axios.get(\"/api/orders/mine\", {\n            headers:\n            {Authorization: 'Bearer' + userInfo.token}\n        });\n        dispatch({type: MY_ORDER_LIST_SUCCESS, payload: data})\n    } catch(error) {\n        dispatch({type: MY_ORDER_LIST_FAIL, payload: error.message})\n    }\n}\n\nconst listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type:  ORDER_LIST_REQUEST});\n        const {userSignin:{userInfo}} = getState();\n        const { data } = await Axios.get(\"/api/orders\", {\n            headers:\n            {Authorization: 'Bearer' + userInfo.token}\n        });\n        dispatch({type: ORDER_LIST_SUCCESS, payload: data})\n    } catch(error) {\n        dispatch({type: ORDER_LIST_FAIL, payload: error.message})\n    }\n}\n\nconst payOrder = (order, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({ type:  ORDER_PAY_REQUEST, payload: paymentResult });\n        const {userSignin:{userInfo}} = getState();\n        const { data } = await Axios.put(\"/api/orders/\" + order._id + \"/pay\", paymentResult, {\n            headers:\n            {Authorization: 'Bearer' + userInfo.token}\n        });\n        dispatch({type: ORDER_PAY_SUCCESS, payload: data})\n    } catch(error) {\n        dispatch({type: ORDER_PAY_FAIL, payload: error.message})\n    }\n}\n\nconst deleteOrder = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({ type:  ORDER_DELETE_REQUEST, payload: orde });\n        const {userSignin:{userInfo}} = getState();\n        const { data } = await Axios.delete(\"/api/orders/\" + orderId, {\n            headers:\n            {Authorization: 'Bearer' + userInfo.token}\n        });\n        dispatch({type: ORDER_DELETE_SUCCESS, payload: data})\n    } catch(error) {\n        dispatch({type: ORDER_DELETE_FAIL, payload: error.message})\n    }\n}\n\nexport {createOrder, detailsOrder, payOrder, listMyOrders, listOrders, deleteOrder}"]},"metadata":{},"sourceType":"module"}