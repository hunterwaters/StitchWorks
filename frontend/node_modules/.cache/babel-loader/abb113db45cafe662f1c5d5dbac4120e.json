{"ast":null,"code":"import Axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL } from \"../constants/orderConstants\";\nimport { userInfo } from 'os';\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = Axios.get(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer' + userInfo.token\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { createOrder };","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/e-commerce/frontend/src/actions/orderActions.js"],"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","userInfo","createOrder","order","dispatch","getState","type","payload","userSignin","data","newOrder","post","headers","Authorization","token","error","message","detailsOrder","orderId","ORDER_DETAILS_REQUEST","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,EAAwEC,qBAAxE,EAA+FC,kBAA/F,QAA0H,6BAA1H;AACA,SAASC,QAAT,QAAyB,IAAzB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAY,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACzD,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEV,oBAAP;AAA6BW,MAAAA,OAAO,EAAEJ;AAAtC,KAAD,CAAR;AACJ,UAAM;AAACK,MAAAA,UAAU,EAAC;AAACP,QAAAA;AAAD;AAAZ,QAA0BI,QAAQ,EAAxC;AACA,UAAM;AAACI,MAAAA,IAAI,EAAE;AAACA,QAAAA,IAAI,EAAEC;AAAP;AAAP,QAA4B,MAAMf,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0BR,KAA1B,EAAiC;AACrES,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE,WAAWZ,QAAQ,CAACa;AAD9B;AAD4D,KAAjC,CAAxC;AAKAV,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAET,oBAAP;AAA6BU,MAAAA,OAAO,EAAEG;AAAtC,KAAD,CAAR;AACC,GATD,CASE,OAAMK,KAAN,EAAa;AACXX,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAER,iBAAP;AAA0BS,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AACJ,CAbD;;AAeA,MAAMC,YAAY,GAAIC,OAAD,IAAa,OAAOd,QAAP,EAAiBC,QAAjB,KAA8B;AAC5D,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAAGe,MAAAA,qBAAH;AAA0BZ,MAAAA,OAAO,EAAEW;AAAnC,KAAD,CAAR;AACA,UAAM;AAACV,MAAAA,UAAU,EAAC;AAACP,QAAAA;AAAD;AAAZ,QAA0BI,QAAQ,EAAxC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAWd,KAAK,CAACyB,GAAN,CAAU,iBAAiBF,OAA3B,EAAoC;AACjDN,MAAAA,OAAO,EACP;AAACC,QAAAA,aAAa,EAAE,WAAWZ,QAAQ,CAACa;AAApC;AAFiD,KAApC,CAAjB;AAIH,GAPD,CAOE,OAAMC,KAAN,EAAa;AACXX,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEN,kBAAP;AAA2BO,MAAAA,OAAO,EAAEQ,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CAXD;;AAaA,SAAQd,WAAR","sourcesContent":["import Axios from 'axios';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL  } from \"../constants/orderConstants\";\nimport { userInfo } from 'os';\n\nconst createOrder = (order) =>  async(dispatch, getState) => {\n    try {\n        dispatch({type: ORDER_CREATE_REQUEST, payload: order});\n    const {userSignin:{userInfo}} = getState();\n    const {data: {data: newOrder}} =  await Axios.post(\"/api/orders\", order, {\n        headers: {\n            Authorization: 'Bearer' + userInfo.token\n        }\n    })\n    dispatch({type: ORDER_CREATE_SUCCESS, payload: newOrder})\n    } catch(error) {\n        dispatch({type: ORDER_CREATE_FAIL, payload: error.message})\n    }\n}\n\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\n    try {\n        dispatch({  ORDER_DETAILS_REQUEST, payload: orderId });\n        const {userSignin:{userInfo}} = getState();\n        const { data } = Axios.get(\"/api/orders/\" + orderId, {\n            headers:\n            {Authorization: 'Bearer' + userInfo.token}\n        })\n    } catch(error) {\n        dispatch({type: ORDER_DETAILS_FAIL, payload: error.message})\n    }\n}\n\nexport {createOrder}"]},"metadata":{},"sourceType":"module"}