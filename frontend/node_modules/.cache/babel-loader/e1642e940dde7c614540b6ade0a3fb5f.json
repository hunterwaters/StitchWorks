{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL } from \"../constants/productConstants\";\nimport Axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (!product._id) {\n      const {\n        data\n      } = await Axios.post(\"/api/products\", product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put(\"/api/products/\" + product._id, product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n      dispatch({\n        type: PRODUCT_SAVE_SUCCESS,\n        payload: data\n      });\n    }\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId, {\n      headers: {\n        Authorizatio\n      }\n    });\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/e-commerce/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","Authorizatio","deleteProduct","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS,  PRODUCT_DETAILS_FAIL,PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS,  PRODUCT_SAVE_FAIL,PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS,  PRODUCT_DELETE_FAIL  } from \"../constants/productConstants\"\nimport Axios from 'axios';\n\nconst listProducts = () =>  async (dispatch) => {\n    try {\n        dispatch( {type: PRODUCT_LIST_REQUEST});\n        const {data} =  await axios.get(\"/api/products\");\n        dispatch({type: PRODUCT_LIST_SUCCESS, payload: data })\n    }\n    catch(error) {\n        dispatch( {type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product});\n        const {userSignin:{userInfo}} = getState();\n        if(!product._id) {\n            const {data} = await Axios.post(\"/api/products\" , product, {headers: {\n                'Authorization': 'Bearer' + userInfo.token \n            }\n        });\n        dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n        } else {\n            const {data} = await Axios.put(\"/api/products/\" + product._id , product, {headers: {\n                'Authorization': 'Bearer' + userInfo.token \n            }\n            });\n            dispatch({type: PRODUCT_SAVE_SUCCESS, payload: data});\n            }\n    }catch(error) {\n        dispatch({type: PRODUCT_SAVE_FAIL, payload: error.message});\n    }\n}\n\nconst detailsProduct  = (productId) =>  async (dispatch) =>{\n    try {\n        dispatch ({type: PRODUCT_DETAILS_REQUEST, payload: productId})\n        const {data} = await axios.get(\"/api/products/\" + productId, {\n            headers: {\n                Authorizatio\n            }\n        });\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message})\n    }\n}\n\nconst deleteProduct  = (productId) =>  async (dispatch) =>{\n    try {\n        dispatch ({type: PRODUCT_DELETE_REQUEST, payload: productId})\n        const {data} = await axios.delete(\"/api/products/\" + productId);\n        dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data});\n    } catch (error) {\n        dispatch({type: PRODUCT_DELETE_FAIL, payload: error.message})\n    }\n}\n\nexport { listProducts , detailsProduct, saveProduct, deleteProduct}"]},"metadata":{},"sourceType":"module"}