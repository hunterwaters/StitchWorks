{"ast":null,"code":"import Axios from \"axios\";\nimport { CART_ADD_ITEM } from '../constants/cartConstants';\n\nconst addToCart = (productId, qty) => async dispatch => {\n  try {\n    const {\n      data\n    } = await Axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data.id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty\n      }\n    });\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => dispatch => {\n  dispatch({\n    type: CART_REMOVE_\n  });\n};\n\nexport { addToCart };","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/e-commerce/frontend/src/actions/cartActions.js"],"names":["Axios","CART_ADD_ITEM","addToCart","productId","qty","dispatch","data","get","type","payload","product","id","name","image","price","countInStock","error","removeFromCart","CART_REMOVE_"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA6B,4BAA7B;;AAGA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAqB,MAAOC,QAAP,IAAoB;AACvD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,KAAK,CAACO,GAAN,CAAU,mBAAmBJ,SAA7B,CAArB;AACAE,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAEP,aAAP;AAAsBQ,MAAAA,OAAO,EAAE;AACpCC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,EADsB;AAEpCC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAFyB;AAGpCC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHwB;AAIpCC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJwB;AAKpCC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALiB;AAMpCX,QAAAA;AANoC;AAA/B,KAAD,CAAR;AASH,GAXD,CAWE,OAAMY,KAAN,EAAa,CAEd;AACJ,CAfD;;AAiBA,MAAMC,cAAc,GAAId,SAAD,IAAgBE,QAAD,IAAc;AAChDA,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEU;AAAP,GAAD,CAAR;AACH,CAFD;;AAIA,SAAQhB,SAAR","sourcesContent":["import Axios from \"axios\";\nimport {CART_ADD_ITEM}  from '../constants/cartConstants';\n\n\nconst addToCart = (productId, qty) =>  async (dispatch) => {\n    try {\n        const {data} = await Axios.get(\"/api/products/\" + productId);\n        dispatch({type: CART_ADD_ITEM, payload: {\n            product: data.id,\n            name: data.name,\n            image: data.image,\n            price: data.price,\n            countInStock: data.countInStock,\n            qty\n        }})\n\n    } catch(error) {\n\n    }\n}\n\nconst removeFromCart = (productId) => (dispatch) => {\n    dispatch({type: CART_REMOVE_})\n}\n\nexport {addToCart}\n"]},"metadata":{},"sourceType":"module"}