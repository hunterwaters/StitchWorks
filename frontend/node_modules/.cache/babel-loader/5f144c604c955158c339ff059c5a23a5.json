{"ast":null,"code":"var _jsxFileName = \"/Users/hunterrwaters/Desktop/e-commerce/frontend/src/screens/ProfileScreen.js\";\nimport React, { useState, useEffect } from 'react';\nimport { logout, update } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\n\nfunction ProfileScreen(props) {\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const userSignin = useSelector(state => state.userSignin);\n  const {\n    userInfo\n  } = userSignin;\n\n  const handleLogout = () => {\n    dispatch(logout());\n    history.push(\"/signin\");\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(update({\n      userId: userInfo._id,\n      email,\n      name,\n      password\n    }));\n  };\n\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading,\n    success,\n    error\n  } = userUpdate;\n  const myOrderList = useSelector(state => state.myOrderList);\n  const {\n    loading: loadingOrders,\n    orders,\n    error: errorOrders\n  } = myOrderList;\n  useEffect(() => {\n    if (userInfo) {\n      setEmail(userInfo.email);\n      setName(userInfo.name);\n      setPassword(userInfo.password);\n    }\n\n    dispatch(listMyOrders());\n    return () => {};\n  }, []); //this is going to be the best thing in the entire world this is going to be the best thing that has ever happened in the history of theworld  this is going to be the greatest thing in the entire world there is nothing else that matters anymore as fasr \n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \" User Profile\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, loading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 33\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  }, error), success && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 33\n    }\n  }, \"Profile Saved Successfully.\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: name,\n    type: \"name\",\n    name: \"name\",\n    id: \"name\",\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: email,\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: e => setEmail(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    value: password,\n    type: \"password\",\n    id: \"password\",\n    name: \"password \",\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit \",\n    className: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"Update\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleLogout,\n    className: \"button secondary full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"Logout\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, loadingOrders ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 32\n    }\n  }, \"Loading...\") : errorOrders ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 30\n    }\n  }, errorOrders) : /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"DATE\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"TOTAL\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"PAID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, \"ACTIONS\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, orders.map(order => /*#__PURE__*/React.createElement(\"tr\", {\n    key: order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 38\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, order._id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, order.createdAt), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, order.totalPrice), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, order.isPaid), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/order/\" + order._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, \"DETAILS\"))))))));\n}\n\nexport default ProfileScreen;","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/e-commerce/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","logout","update","listMyOrders","useDispatch","useSelector","Link","useHistory","ProfileScreen","props","history","name","setName","password","setPassword","email","setEmail","dispatch","userSignin","state","userInfo","handleLogout","push","submitHandler","e","preventDefault","userId","_id","userUpdate","loading","success","error","myOrderList","loadingOrders","orders","errorOrders","target","value","map","order","createdAt","totalPrice","isPaid"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {logout, update} from '../actions/userActions';\nimport { listMyOrders} from '../actions/orderActions';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Link, useHistory} from 'react-router-dom';\n\nfunction ProfileScreen(props) {\n    const history = useHistory();\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const dispatch = useDispatch();\n\n    const userSignin = useSelector(state => state.userSignin);\n    const {userInfo} = userSignin\n    const handleLogout = () => {\n        dispatch(logout());\n        history.push(\"/signin\");\n\n    }\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(update({ userId: userInfo._id, email, name, password}))\n    }\n\n    const userUpdate = useSelector(state => state.userUpdate);\n    const {loading, success, error} = userUpdate;\n\n    const myOrderList = useSelector(state => state.myOrderList);\n    const { loading: loadingOrders, orders, error: errorOrders} = myOrderList;\n\n\n    useEffect(() => {\n        if(userInfo) {\n            setEmail(userInfo.email);\n            setName(userInfo.name);\n            setPassword(userInfo.password);\n        }\n        dispatch(listMyOrders());\n        return () => {\n\n        }\n    }, [])\n\n    //this is going to be the best thing in the entire world this is going to be the best thing that has ever happened in the history of theworld  this is going to be the greatest thing in the entire world there is nothing else that matters anymore as fasr \n\n    return <div className = \"profile\">\n        <div className = \"profile-info\"></div>\n        <div className = \"profile-orders\">\n        <div className = \"form\">\n        <form onSubmit = {submitHandler}>\n            <ul className = \"form-container\">\n                <li>\n                    <h2> User Profile</h2>\n                </li>\n                <li>\n                    {loading && <div>Loading...</div>}\n                    {error && <div>{error}</div>}\n                    {success && <div>Profile Saved Successfully.</div>}\n                </li>\n                <li>\n                    <label htmlFor = \"name\">\n                        Name\n                    </label>\n                    <input value ={name} type = \"name\" name = \"name\" id = \"name\" onChange={(e) => setName(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"email\">\n                        Email\n                    </label>\n                    <input value = {email} type = \"email\" name = \"email\" id = \"email\" onChange={(e) => setEmail(e.target.value)}>\n                    </input>\n                </li>\n                <li>\n                    <label htmlFor = \"password\">\n                        Password\n                    </label>\n                    <input value = {password} type = \"password\" id = \"password\" name = \"password \" onChange={(e) => setPassword(e.target.value)}></input>\n                </li>\n                <li>\n                    <button type = \"submit \"  className = \"button\">Update</button>\n                </li>\n                <li>\n                    <button type = \"button\" onClick = {handleLogout} className = \"button secondary full-width\">Logout</button>\n                </li>\n            </ul>\n        </form>\n    </div>\n        </div>\n        <div className = \"profile-orders\">\n            {\n                loadingOrders? <div>Loading...</div>:\n                errorOrders? <div>{errorOrders}</div>:\n                <table className = \"table\">\n                    <thead>\n                    <tr>\n                            <th>ID</th>\n                            <th>DATE</th>\n                            <th>TOTAL</th>\n                            <th>PAID</th>\n                            <th>ACTIONS</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                {orders.map(order => <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.createdAt}</td>\n                    <td>{order.totalPrice}</td>\n                    <td>{order.isPaid}</td>\n                    <td>\n                        <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                    </td>\n                </tr>)}\n                    </tbody>\n                </table>\n            }\n        </div>\n\n    </div>\n}\n\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}