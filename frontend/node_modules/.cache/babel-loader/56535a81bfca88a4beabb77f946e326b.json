{"ast":null,"code":"import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS } from \"../constants/userConstants\";\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/register\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin };","map":{"version":3,"sources":["/Users/hunterrwaters/Desktop/e-commerce/frontend/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_FAIL","USER_SIGNIN_SUCCESS","USER_REGISTER_REQUEST","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,mBAAR,EAA6BC,gBAA7B,EAA+CC,mBAA/C,EAAoEC,qBAApE,EAA2FC,kBAA3F,EAA+GC,qBAA/G,QAA4I,4BAA5I;;AAGA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;AACnDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEV,mBAAP;AAA4BW,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,mBAAP;AAA4BS,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GAJD,CAIC,OAAMK,KAAN,EAAa;AACVR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,gBAAP;AAAyBU,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAMC,QAAN,IAAmB;AAC3DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,qBAAP;AAA8BQ,IAAAA,OAAO,EAAE;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAvC,GAAD,CAAR;;AACA,MAAI;AACA,UAAM;AAACI,MAAAA;AAAD,QAAS,MAAMd,KAAK,CAACe,IAAN,CAAW,qBAAX,EAAkC;AAACO,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAlC,CAArB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,qBAAP;AAA8BM,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACH,GAJD,CAIC,OAAMK,KAAN,EAAa;AACVR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,kBAAP;AAA2BO,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AACH;AACJ,CATD;;AAWA,SAAQZ,MAAR","sourcesContent":["import Axios from \"axios\";\nimport Cookie from 'js-cookie';\nimport {USER_SIGNIN_REQUEST, USER_SIGNIN_FAIL, USER_SIGNIN_SUCCESS, USER_REGISTER_REQUEST, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS } from \"../constants/userConstants\"\n\n\nconst signin = (email, password) => async(dispatch) => {\n    dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n    try {\n        const {data} = await Axios.post(\"/api/users/signin\", {email, password});\n        dispatch({type: USER_SIGNIN_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    }catch(error) {\n        dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\n    }\n}\n\nconst register = (name, email, password) => async(dispatch) => {\n    dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}});\n    try {\n        const {data} = await Axios.post(\"/api/users/register\", {name, email, password});\n        dispatch({type: USER_REGISTER_SUCCESS, payload: data});\n        Cookie.set('userInfo', JSON.stringify(data));\n    }catch(error) {\n        dispatch({type: USER_REGISTER_FAIL, payload: error.message});\n    }\n}\n\nexport {signin };"]},"metadata":{},"sourceType":"module"}